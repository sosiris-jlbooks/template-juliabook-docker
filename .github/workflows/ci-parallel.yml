name: Build Jupyter Notebooks

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VER: '3.11'
  TIMEOUT: 600
  JOBS: '1'

jobs:
  ci:
    name: CI (parallel)
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/sosiristseng/docker-jupyterbook:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt
      - name: Read Julia version
        uses: SebRollen/toml-action@v1.0.2
        id: read_toml
        with:
          file: 'Manifest.toml'
          field: 'julia_version'
      - name: Setup Julia ${{ steps.read_toml.outputs.value }}
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ steps.read_toml.outputs.value }}
      - name: Cache Julia deps
        uses: actions/cache@v3
        with:
          path: ~/.julia
          key: ${{ runner.os }}-julia-${{ steps.read_toml.outputs.value }}-${{ hashFiles('**/Manifest.toml') }}
          restore-keys: |
            ${{ runner.os }}-julia-${{ steps.read_toml.outputs.value}}-
      - name: Install Julia deps
        env:
          PYTHON: ${{ steps.python.outputs.python-path }}
        run: |
          julia --color=yes --project="" -e 'import Pkg; Pkg.add("IJulia"); using IJulia; installkernel("Julia", "--project=@.", env=Dict("JULIA_NUM_THREADS"=>"auto"))'
          julia --color=yes --project=@. -e 'import Pkg; Pkg.instantiate()'
      - name: Build Notebooks
        run: >
          parallel --joblog /tmp/log -j${JOBS}
          jupyter nbconvert --to notebook
          --ExecutePreprocessor.timeout=${{ env.TIMEOUT }}
          --execute --inplace
          {} ::: docs/*.ipynb
      - name: Execution results
        run: cat /tmp/log
      - name: Build website
        run: jupyter-book build docs/ --keep-going -v
      - name: Upload page artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v1
        with:
          path: docs/_build/html

  # Deployment job
  # deploy:
  #   needs: ci-parallel
  #   if: github.ref == 'refs/heads/main'
  #   # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
  #   permissions:
  #     pages: write # to deploy to Pages
  #     id-token: write # to verify the deployment originates from an appropriate source
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v1
